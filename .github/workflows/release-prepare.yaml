name: Build release version

on:
  push:
    branches:
      - 'release-builder'

jobs:
  build_and_test:
    name: Build and test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Setup Java 8
        uses: actions/setup-java@v1
        with:
          java-version: 8

      - name: Report Java version
        run: |
          java -version
          javac -version

      - name: Setup Moxie
        run: |
          wget http://gitblit.github.io/moxie/maven/com/gitblit/moxie/moxie+ant/0.9.4/moxie+ant-0.9.4.tar.gz
          tar -xzf moxie+ant-0.9.4.tar.gz
          moxie-0.9.4/bin/moxie -version



  build_release:
    name: Prepare release build
    runs-on: ubuntu-latest
    needs: build_and_test

    steps:
      - name: Set up Git properties
        run: |
          set -x 
          git config --global user.name ${{ github.event.pusher.name }}
          git config --global user.email ${{ github.event.pusher.email }}

      - name: Checkout my repo
        uses: actions/checkout@v2

      - name: Fetch all remote branches
        run: |
          set -x
          git fetch --no-tags --prune --depth=2 origin +refs/heads/*:refs/remotes/origin/*

      - name: Create or checkout release branch
        run: |
          set -x
          if [[ -n "$(git ls-remote --heads origin release)" ]] ; then
            echo "Remote has already branch 'release'"
          fi
          if [[ -n "$(git branch -l -r origin/release)" ]] ; then
            echo "We have a remote branch 'release'"
            git fetch origin +release
            git checkout release
          else
            git branch release $(git merge-base --fork-point master)
          fi

      - name: Put something on the release branch
        run: |
          echo "This is a release item now" > release.item.txt
          git rev-parse HEAD >> release.item.txt
          git add release.item.txt
          git commit -m "Create a release item to release"
          git push origin release

      - name: Create merge request as trigger
        run: |
          if gh pr view > /dev/null ; then
            echo "PR already exists."
          else
            gh pr create --title "Release version xy" --body "This is to release version xy" --base master --draft
          fi

